# Minimal, no-theme tmux config focused on navigation and splits

# Keep defaults lightweight and compatible with most terminals
set -g mode-keys vi
set -s escape-time 0
set -g base-index 1
set -g mouse on
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'spywhere/tmux-named-snapshot'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @continuum-save-interval '15'
set -g @continuum-restore 'on'
set -g @sessionx-bind 'o'
setw -g pane-base-index 1
set -as terminal-features '*:RGB'

# Extended keys (CSI u / modifyOtherKeys) so modified keys like Shift+Esc
# can be distinguished and passed through to apps like Neovim.
# Requires tmux 3.2+ and a terminal that supports extended keys.
# Extended keys can break newline pasting in Neovim on tmux 3.5+
# See: https://github.com/tmux/tmux/issues/4163
set -s extended-keys off
# set -as terminal-features '*:extkeys'
set -g xterm-keys on

# Smart pane switching aware of Vim/Neovim.
# If the active pane runs (n)vim or copy-mode is active, pass keys through;
# otherwise move in tmux. Uses tmux format predicates (no external grep).
bind -n C-h if -F "#{||:#{pane_in_mode},#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}}" 'send-keys C-h' 'select-pane -L'
bind -n C-j if -F "#{||:#{pane_in_mode},#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}}" 'send-keys C-j' 'select-pane -D'
bind -n C-k if -F "#{||:#{pane_in_mode},#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}}" 'send-keys C-k' 'select-pane -U'
bind -n C-l if -F "#{||:#{pane_in_mode},#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}}" 'send-keys C-l' 'select-pane -R'

# Handle edge cases for <C-\> across tmux versions
# Handle edge cases for <C-\> across tmux versions
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(\.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
  "bind -n C-\\ if -F \"#{||:#{pane_in_mode},#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}}\" 'send-keys C-\\' 'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
  "bind -n C-\\ if -F \"#{||:#{pane_in_mode},#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}}\" 'send-keys C-\\\\' 'select-pane -l'"

# Easy splits
# Note: "vertical split" means a vertical divider (panes left/right) => -h
#       "horizontal split" means a horizontal divider (panes top/bottom) => -v
bind - split-window -v           # split below (horizontal divider)
bind | split-window -h           # split right (vertical divider)
bind v split-window -h           # vertical divider (side-by-side)
bind h split-window -v           # horizontal divider (stacked)

# Alt+Shift+v / Alt+Shift+h to split without prefix
bind -n M-V split-window -h
bind -n M-H split-window -v

# Quick reload
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# Preserve terminal clear-screen via Prefix + C-l
bind C-l send-keys 'C-l'

# ----- Minimal status bar -----
# Keep colors aligned with terminal theme and reduce visual weight
set -g status on
set -g status-style bg=default,fg=default
set -g status-position top
set -g status-interval 0

# Trim content to save space
set -g status-left ' #S '
set -g status-left-length 12
set -g status-right ''
set -g status-right-length 0
set -g status-justify centre

# Minimal window list with subtle icons
setw -g window-status-format ' #I '
setw -g window-status-current-format ' [#I] '
setw -g window-status-style fg=default,bg=default
setw -g window-status-current-style fg=default,bg=default,bold

# Toggle status bar visibility with Prefix+b
bind b if -F '#{==:#{status},on}' 'set -g status off' 'set -g status on'

# Enable system clipboard integration (OSC 52 / terminal clipboard)
# Requires tmux 3.2+ and a terminal that supports clipboard access
set -g set-clipboard on

# Copy-mode navigation mirrors global keys (with C-l = next)
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-\\ select-pane -l

run '~/.tmux/plugins/tpm/tpm'
